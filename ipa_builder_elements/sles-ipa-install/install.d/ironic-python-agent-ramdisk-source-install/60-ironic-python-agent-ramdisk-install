#!/bin/bash

if [ "${DIB_DEBUG_TRACE:-0}" -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

# Install and lock IPA distro package requirements
declare -a packages=(dmidecode iptables lshw ipmitool parted hdparm util-linux mkisofs
    gptfdisk kmod psmisc dosfstools mdadm efibootmgr efivar chrony e2fsprogs
    nvme-cli open-iscsi)
zypper install -y --no-recommends "${packages[@]}"
zypper al "${packages[@]}"

# Build deps
zypper install -y --no-recommends gcc python311-pip git

# python 3.11 is used to install ipa. Update the symlinks so that we can remove
# python 3.6 later and avoid having 2 versions of python.
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.11 20
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 20
sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3.11 20
sudo update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3.11 20

### REQUIRED PACKAGES
packages=(jq wget patch gptfdisk docker libnm0 xorriso pciutils qemu-tools
    sysconfig kexec-tools openvswitch device-mapper NetworkManager open-lldp
    kernel-firmware typelib-1_0-NM-1_0)
zypper install -y --no-recommends "${packages[@]}"
zypper al "${packages[@]}"

# Install nmstate
zypper in -y --no-recommends cargo make
mkdir /tmp/nmstate-build
pushd /tmp/nmstate-build
python3.11 -m venv .
. ./bin/activate
pip install setuptools PyYAML
git clone https://github.com/nmstate/nmstate.git
cd nmstate
PREFIX=/usr make install
deactivate
cd ..

# Install NetworkManager-ovs, not found in zypper repos so install this way
wget -O nm-ovs.rpm https://ftp.lysator.liu.se/pub/opensuse/distribution/leap/15.6/repo/oss/x86_64/NetworkManager-ovs-1.44.2-150600.1.7.x86_64.rpm
zypper in -y nm-ovs.rpm
popd

pip install docker ovs
### END OF REQUIRED PACKAGES


#cloud-init \
export LC_ALL=C.UTF-8

SCRIPTDIR=$(dirname $0)
IPADIR=/tmp/ironic-python-agent
IRLIBDIR=/tmp/ironic-lib
UPPER_CONSTRAINTS=/tmp/requirements/upper-constraints.txt
VENVDIR=/opt/ironic-python-agent

"python3.11" --version
"python3.11" -m venv $VENVDIR
REQUIRED_PIP_STR="21.3.1"
REQUIRED_PIP_TUPLE="(21, 3, 1)"
HAS_PIP=$($VENVDIR/bin/python3 -c \
    "import pip; print(tuple(map(int, pip.__version__.split('.'))) >= $REQUIRED_PIP_TUPLE)")
if [ $HAS_PIP == "False" ]; then
    # NOTE(dtantsur): use a fixed version to avoid breakages
    $VENVDIR/bin/pip install "pip==$REQUIRED_PIP_STR"
fi

# For aarch64 platform, it seems it always tries to build wheels first for
# python packages which have no wheels in PyPi. Although it will install the
# source packages successfully at last.
if [[ "$ARCH" =~ (arm64|aarch64) ]]; then
    $VENVDIR/bin/pip install wheel
fi

# install IPA inside the virtual environment
$VENVDIR/bin/pip install -c $UPPER_CONSTRAINTS $IPADIR
ln -s $VENVDIR/bin/ironic-python-agent /usr/local/bin/
ln -s $VENVDIR/bin/ironic-collect-introspection-data /usr/local/bin/

# install ironic-lib from source if requested
if [ ${IRONIC_LIB_FROM_SOURCE:-false} == "true" ]; then
    $VENVDIR/bin/pip install -c $UPPER_CONSTRAINTS -r $IRLIBDIR/requirements.txt
    $VENVDIR/bin/pip install $IRLIBDIR
fi

case "$DIB_INIT_SYSTEM" in
    systemd)
        install -D -g root -o root -m 0644 ${SCRIPTDIR}/ironic-python-agent.service /usr/lib/systemd/system/ironic-python-agent.service
        ;;
    *)
        echo "Unsupported init system"
        exit 1
        ;;
esac

# Copying the self signed certificate for request library
if [ -f /tmp/in_target.d/ipa-trusted-cert.pem ]; then
    cat /tmp/in_target.d/ipa-trusted-cert.pem >> $($VENVDIR/bin/python -c "import requests; print(requests.certs.where())")
fi

